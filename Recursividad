/*
#include <stdio.h>
#include <stdlib.h>

// POTENCIA POR RECURSIVIDAD

int potencia(int , int );

int main()
{
    int base; int exponente;
    printf("Nro Base : ");
    scanf("%d",&base);
    printf("Nro Exponente : ");
    scanf("%d",&exponente);
    printf("La potencia de %d con exponente %d es:  %d " ,base, exponente, potencia(base,exponente));
    return 0;
}

int potencia(int base, int expo){
    if(expo == 0)
        return 1;
    else
        return base*potencia(base, (expo-1));

}

*/


#include <stdio.h>
#include <stdlib.h>

// POTENCIA POR RECURSIVIDAD

int serie(int );

int main()
{
    int pos;
    printf("Mostrar numero de la serie Fibonacci en la posicion : ");
    scanf("%d", &pos);
    printf("Numero en la posicion %d : %d " , pos , serie(pos));
}

int serie(int n){
    if((n == 1)||(n == 2))
        return 1;
    else
        return (serie(n-1) + serie(n-2));
}


/*

#include <stdio.h>
//Factorial por recursividad
long factorial(int numero);

int main()
{
    int numero;
    printf("ingrese el numero:");
    scanf("%i",&numero);
    printf("\n el factotrial del numero es %li",factorial(numero));
    return 0;
    }

    long factorial(int n ){
    if(n<=1){
        return 1;
    }
    else {
      return(n*factorial(n-1));
    }
}
*/


/*


#include <stdio.h>
#include <stdlib.h>

int main()
{
        //Se digita el tamaño del arreglo declarando su variable como numero entero
        int cant;
        printf(" Ingrese el tamaño de arreglo  ");
        scanf("%d",&cant);
        int serie[cant];
        int i=0;
        for( i = 0; i < cant; i++){
            scanf("%d",&serie[i]);
        }

        printf("Numero mayor = %d" , mayor(serie,cant));
        printf("Numero menor = %d" , menor(serie,cant));
        printf("El promedio de la serie es : " , promedio(serie, cant, cant));
        return 0;
}


int mayor(int serie[], int cant){
        //Declaracion de la variables auxiliar que almacenara el mayor valor segun comparaciones
        int auxmayor=0;
        int i=0;
        for (i = 0; i < cant; i++) {
            if(auxmayor < serie[i]){
                auxmayor = serie[i];
            }
        }
        return auxmayor;
    }

int menor(int serie[], int cant){
        //Declaracion de la variables auxiliar que almacenara el mayor valor segun comparaciones
        int auxmenor=serie[0];
        int i = 0;
        for( i = 0; i < cant; i++) {
            if(auxmenor > serie[i]){
                auxmenor = serie[i];
        }
    }
  return auxmenor;
}

//Promedio recursivo
int promedio(int serie[], int contador, int cant){
  if(contador==0){
      return serie[0]/cant;
  }else
  {
    return (serie[contador]/cant) + promedio(serie, contador-1 , cant);
  }
}



*/

